{"version":3,"file":"static/js/419.bebda40a.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/App.module.css?6c4d","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","redux/selectors.js","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"App_container__ZdBeZ\",\"title\":\"App_title__Xrt9W\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const newContact = { name: form.name.value, number: form.number.value };\n\n    dispatch(addContact(newContact));\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={submitHandler} className={css.form}>\n      <label className={css.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className={css.input}\n          autoComplete=\"false\"\n        />\n      </label>\n\n      <label className={css.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className={css.input}\n          autoComplete=\"false\"\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filterHandler = e => {\n    const filterValue = e.currentTarget.value;\n    dispatch(setFilter(filterValue));\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" onChange={filterHandler} className={css.filterInput} />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__UAAix\",\"deleteBtn\":\"ContactListItem_deleteBtn__roUYm\"};","import React, { memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport css from './ContactListItem.module.css';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactListItem = memo(({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const onDelete = e => {\n    dispatch(deleteContact(e.currentTarget.id));\n  };\n\n  return (\n    <li className={css.item}>\n      <span>\n        {name}: {number}\n      </span>\n      <button className={css.deleteBtn} id={id} onClick={onDelete}>\n        Delete\n      </button>\n    </li>\n  );\n});\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","export const getContacts = state => state.contacts.contacts;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter;\n","import ContactListItem from 'components/ContactListItem/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/selectors';\n\nconst getVisibeContacts = (contacts, filterValue) => {\n  return contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n};\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getFilter);\n  const visibleContacts = getVisibeContacts(contacts, filterValue);\n\n  if (!contacts?.length) {\n    return <p>You can add contacts</p>;\n  }\n\n  if (!visibleContacts?.length) {\n    return <p>Not found </p>;\n  }\n\n  return (\n    <ul>\n      {visibleContacts.map(contact => {\n        return (\n          <ContactListItem\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport css from '../components/App.module.css';\n\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader/Loader';\nimport { getIsLoading, getError } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <main>\n      <div className={css.container}>\n        <h1 className={css.title}>Phonebook</h1>\n        <ContactForm />\n\n        <h2 className={css.title}>Contacts</h2>\n        <Filter />\n\n        {isLoading && !error && <Loader />}\n        <ContactList />\n      </div>\n    </main>\n  );\n};\n\nexport default Contacts;\n"],"names":["dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","newContact","name","value","number","addContact","reset","className","css","type","pattern","title","required","autoComplete","onChange","filterValue","setFilter","memo","id","onClick","deleteContact","getContacts","state","contacts","getIsLoading","isLoading","getError","error","getFilter","filter","useSelector","visibleContacts","contact","toLowerCase","includes","getVisibeContacts","length","map","useEffect","fetchContacts","Loader"],"sourceRoot":""}